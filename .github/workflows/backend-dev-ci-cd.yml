name: Backend Dev CI/CD Workflow

on:
  push:
    branches: [ "develop-BE" ]
    paths:
      - "backend/**"
      - ".github/workflows/backend-dev-ci-cd.yml"
  # pull_request:
  #   branches: [ "develop-BE" ]
  #   paths:
      # - "backend/**"
      # - ".github/workflows/backend-dev-ci-cd.yml"

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set Application yml for dev
        run: |
          echo "${{ secrets.APPLICATION_PROPERTIES_DEV }}" > src/main/resources/application.properties
        working-directory: ./backend

      - name: Build with Gradle Wrapper
        run: ./gradlew clean build
        working-directory: ./backend

      - name: Docker build and push
        run: |
          docker login -u ${{ secrets.BE_DOCKERHUB_USERNAME }} -p ${{ secrets.BE_DOCKERHUB_PASSWORD }}
          docker build -t ${{ secrets.BE_DOCKER_IMAGE_NAME_DEV }} .
          docker tag ${{ secrets.BE_DOCKER_IMAGE_NAME_DEV }} ${{ secrets.BE_DOCKERHUB_USERNAME }}/${{ secrets.BE_DOCKER_IMAGE_NAME_DEV }}:${GITHUB_SHA::7}
          docker push ${{ secrets.BE_DOCKERHUB_USERNAME }}/${{ secrets.BE_DOCKER_IMAGE_NAME_DEV }}:${GITHUB_SHA::7}

  deploy:
    needs: build-and-test
    runs-on: [ self-hosted, dev ]

    steps:
      - name: Pull Image And Restart Container
        run: |
          docker login -u ${{ secrets.BE_DOCKERHUB_USERNAME }} -p ${{ secrets.BE_DOCKERHUB_PASSWORD }}
          docker stop ${{ secrets.BE_DOCKER_CONTAINER_NAME }} | true
          docker rm ${{ secrets.BE_DOCKER_CONTAINER_NAME }} | true
          docker image prune -a -f
          docker pull ${{ secrets.BE_DOCKERHUB_USERNAME }}/${{ secrets.BE_DOCKER_IMAGE_NAME_DEV }}:${GITHUB_SHA::7}
          docker run --name ${{ secrets.BE_DOCKER_CONTAINER_NAME }} -d -p 80:8080 -v /logs:/logs -e SPRING_PROFILES_ACTIVE=dev ${{ secrets.BE_DOCKERHUB_USERNAME }}/${{ secrets.BE_DOCKER_IMAGE_NAME_DEV }}:${GITHUB_SHA::7}
